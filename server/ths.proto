syntax = "proto3";
package thspbs;


service Toxhs {
    rpc PollCallback(EmptyReq) returns(stream Event);
    rpc GetBaseInfo(EmptyReq) returns(BaseInfo);
    rpc RmtCall(Event) returns(Event);
    rpc Ping(EmptyReq) returns(EmptyReq);
}

message Event {
    int64 EventId = 1;
    string Name = 2; // event name
    // int32 NameId = 8;  // TODO
    repeated string Args = 3;
    repeated string Margs = 4; // more info based on args
    map<string,string> Nargs = 5; // named args
    int32 ErrCode = 6; // error code
    string ErrMsg = 7; // error msg
}

message BaseInfo {
    string ToxId = 1;
    string Name = 2;
    string Stmsg = 3; // statusText
    uint32 Status = 4;
    map<uint32,FriendInfo> Friends = 5;
    map<uint32,GroupInfo> Groups = 6;
    int32 ConnStatus = 7;
    int64 NextBatch = 8;
}

message FriendInfo {
    uint32 Fnum = 1;
    uint32 Status = 2;
    string Pubkey = 3;
    string Name = 4;
    string Stmsg = 5;
    string Avatar = 6;
    uint64 Seen  = 7;
    int32 ConnStatus = 8;
}

message GroupInfo {
    uint32 Gnum = 1;
    uint32 Mtype = 2;
    string GroupId = 3;
    string Title = 4;
    string Stmsg = 5;
    bool Ours = 6;
    map<uint32, MemberInfo> Members = 7;
}

// = ContactInfo
// 可用于friend,group,peer
message MemberInfo {
    uint32 Pnum = 1;
    string Pubkey = 2;
    string Name = 3;
    enum MemType { UNKNOWN = 0; FRIEND = 1; GROUP = 2; PEER = 3;}
    MemType Mtype = 4; // member type, friend, group, peer
}

message Message 
{
    uint64 MsgId = 1;
    string Content = 2;
    MemberInfo Peer = 3;
    uint64 Created = 4;
    uint64 Updated = 5;
}

message Messages
{
    repeated Message Msgs = 1;
}


///////
service Greeter {
    rpc SayHello(EmptyReq) returns(HelloReq);
    // 测试带参数的hello
    rpc SayHellox(HelloReq) returns(HelloReq);
}

message EmptyReq {}

message HelloReq {
    string Name = 1;
    string Msg = 2;
}
message HelloResp {
    int32 Code = 1;
    int64 Status = 2;
}

